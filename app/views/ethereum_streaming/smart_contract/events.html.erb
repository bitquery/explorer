<div class='row'>
  <div class='col-12 col-lg-12 mb-4'>
    <div class='card' id='EventsDistribution'>
           <div class="placeholder-container">
        <div class="placeholder-row"></div>
      </div>
    </div>
  </div>
</div>
<div class='row'>
  <div class='col-12 col-lg-12 mb-4'>
    <div class='card' id='SmartContractEvents'>
           <div class="placeholder-container">
        <div class="placeholder-row"></div>
      </div>
    </div>
  </div>
</div>
<div class='row'>
  <div class='col-12 col-lg-12 mb-4'>
    <div class='card' id='AddressesUsedInEventParameters'>
      <div class="placeholder-container">
        <div class="placeholder-row"></div>
      </div>
    </div>
  </div>
</div>
<script type="module">
    class EventsDistribution extends BarChartComponent {
        configuration() {
            return {
                topElement: response => response.EVM.Events,
                chainId: response => response.EVM.Events[0]?.ChainId,
                title: response => {
                    const tokenName = response.EVM.Transfers[0]?.Transfer?.Currency.Name || ''
                    const tokenSymbol = response.EVM.Transfers[0]?.Transfer?.Currency.Symbol ? `(${response.EVM.Transfers[0]?.Transfer?.Currency.Symbol})` : ''
                    return `${tokenName} ${tokenSymbol} Events Distribution`
                },
                id: 'EventsDistribution',
                theme: '<%= @theme %>',
                columns: [
                    {
                        name: 'Event', cell: row => row.Log.Signature.Name
                    },
                    {
                        name: 'Event Count', cell: row => +row.count
                    },
                ],
                options: {
                    theme: 'material'
                }
            }
        }
    }

    class SmartContractEvents extends BootstrapTableComponent {
        configuration() {
            return {
                topElement: response => response.EVM.Events,
                chainId: response => response.EVM.Events[0]?.ChainId,
                title: response => {
                    const tokenName = response.EVM.Transfers[0]?.Transfer?.Currency.Name || ''
                    const tokenSymbol = response.EVM.Transfers[0]?.Transfer?.Currency.Symbol ? `(${response.EVM.Transfers[0]?.Transfer?.Currency.Symbol})` : ''
                    return `${tokenName} ${tokenSymbol} Smart Contract Events`
                },
                id: 'SmartContractEvents',
                theme: '<%= @theme %>',
                columns: [
                    {
                        name: 'Event',
                        cell: row => ({event: row.Log.Signature.Name, hash: row.Log.Signature.SignatureHash}),
                        rendering: renderEventLink
                    },
                    {
                        name: 'Event signature', cell: row => row.Log.Signature.Signature
                    },
                    {
                        name: 'Event Count', cell: row => row.count,
                        rendering: renderNumbers, headerStyle: {textAlign: 'end', width: '110px'},
                    },
                ]
            }
        }
    }


    const variables = {
        network: '<%= @streaming%>',
        address: '<%= @address %>',
        since: '<%= @from %>',
        till: '<%= @till %>',
    }
    renderComponent('<%=@streaming_access_token %>', [[SmartContractEvents, '#SmartContractEvents'], [EventsDistribution, '#EventsDistribution']], 'Smart-Contract-Events---1-Month-Ago_1', variables);
</script>
