<div class="row">
  <div class="col-12 col-lg-12 mb-4">
    <div class="card">
      <div class="card-header">
        <div class="d-inline-flex align-items-center">
          <div class="choice-view">
            <input class="choice-view__radio" type="radio" name="view" id="graph-radio" value="graph" onclick="$('#graph').parents('.card-body').show();$('#sankey-graph').parents('.card-body').hide()" checked>
            <label class="choice-view__label" for="graph-radio">Graph</label>
          </div>
          <div class="choice-view">
            <input class="choice-view__radio" type="radio" name="view" id="sankey-radio" value="sankey" onclick="$('#sankey-graph').parents('.card-body').show();$('#graph').parents('.card-body').hide()">
            <label class="choice-view__label" for="sankey-radio">Sankey</label>
          </div>
          <div class="choice-view">
            <a class="btn btn-primary" href="https://lite.bitquery.io/?chain=<%= params['network']['network'] %>&address=<%= @address %>" target="_blank">Try MoneyFlow Lite</a>
          </div>
        </div>
      </div>
      <div class="card-body" style="padding: 0">
        <div id="graph" style="width: 100%;"></div>
      </div>
      <div class="card-body" style="padding: 0; display: none;">
        <div id="sankey-graph" style="width: 100%;"></div>
      </div>
    </div>
  </div>
  <script type="module">
      const query = new graphs.query(`
query ($network: CosmosNetwork!, $address: String!, $inboundDepth: Int!, $outboundDepth: Int!, $limit: Int!, $from: ISO8601DateTime, $till: ISO8601DateTime) {
  cosmos(network: $network) {
    inbound: coinpath(initialAddress: {is: $address}, depth: {lteq: $inboundDepth}, options: {direction: inbound, asc: "depth", desc: "amount", limitBy: {each: "depth", limit: $limit}}, date:{since: $from, till: $till}) {
      sender {
        address
        annotation
      }
      receiver {
        address
        annotation
      }
      amount
      currency{symbol}
      depth
      count
    }
    outbound: coinpath(initialAddress: {is: $address}, depth: {lteq: $outboundDepth}, options: {asc: "depth", desc: "amount", limitBy: {each: "depth", limit: $limit}}, date:{since: $from, till: $till}) {
      sender {
        address
        annotation
      }
      receiver {
        address
        annotation
      }
      amount
      currency{symbol}
      depth
      count
    }
  }
}
`)
      new graphs.address_graph('#graph', query, {
          theme: '<%= @theme %>',
          currency: "<%= params['network']['currency'] %>"
      })
      new graphs.addControls('#graph', query, {
          theme: '<%= @theme %>'
      })
      new graphs.address_sankey('#sankey-graph', query, {
          theme: '<%= @theme %>',
          currency: "<%= params['network']['currency'] %>"
      })
      new graphs.addControls('#sankey-graph', query, {
          theme: '<%= @theme %>'
      })
      const fromDate = '<%= j @from %>';
      const tillDate = '<%= j @till %>';
      queryWithTimeRange(rr, query, fromDate, tillDate, {"inboundDepth": 1, "outboundDepth": 1, "limit": 10, "offset": 0, "network": "<%= params['network']['network'] %>", "address": "<%= @address %>"})
  </script>
</div>

