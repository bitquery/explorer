<div class='row'>
  <div class='col-12 col-xl-6 mb-4'>
    <div class='card' id='MethodInformation'>
      <div class="placeholder-container">
        <div class="placeholder-row"></div>
      </div>
    </div>
  </div>
  <div class='col-12 col-xl-6 mb-4'>
    <div class='card' id='MethodStatistic'>
      <div class="placeholder-container">
        <div class="placeholder-row"></div>
      </div>
    </div>
  </div>
</div>

<div class='row'>
  <div class='col-12 col-lg-12 mb-4'>
    <div class='card' id='MethodTransactions'>
      <div class="placeholder-container">
      <div class="placeholder-row"></div>
    </div>
    </div>
  </div>
</div>

<script type="module">
    class MethodInformation extends BootstrapVerticalTableComponent {
        configuration() {
            return {
                topElement: response => response.EVM.Calls,
                chainId: response => response.EVM.Calls[0]?.ChainId,
                title: () => 'Method Information',
                id: 'MethodInformation',
                theme: '<%= @theme %>',
                columns: [
                    {
                        name: 'Method Name', cell: row => row.Call.Signature.Name
                    },
                    {
                        name: 'Method Signature', cell: row => row.Call.Signature.Signature
                    },
                    {
                        name: 'Signature Hash', cell: row => row.Call.Signature.SignatureHash
                    },
                ]
            }
        }
    }
    class MethodStatistic extends BootstrapTableComponent {
        configuration() {
            return {
                topElement: response => response.EVM.Calls,
                chainId: response => response.EVM.Calls[0]?.ChainId,
                title: () => 'Method Statistic by Date',
                id: 'MethodStatistic',
                theme: '<%= @theme %>',
                columns: [
                    {
                        name: 'Date', cell: row => row.Block.Date,
                        rendering: renderDate, headerStyle: {width: '100px'},
                    },
                    {
                        name: 'Uniq Transaction Sender', cell: row => row.transaction_from,
                        rendering: renderNumbers, headerStyle: {textAlign: 'end'},
                    },
                    {
                        name: 'Uniq Transaction Receiver', cell: row => row.transaction_to,
                        rendering: renderNumbers, headerStyle: {textAlign: 'end'},
                    },
                ]
            }
        }
    }
    class MethodTransactions extends BootstrapTableComponent {
        configuration() {
            return {
                topElement: response => response.EVM.Calls,
                chainId: response => response.EVM.Calls[0]?.ChainId,
                title: () => 'Method Transactions',
                id: 'MethodTransactions',
                theme: '<%= @theme %>',
                columns: [
                    {
                        name: 'Timestamp', cell: row => row.Block.Time,
                        rendering: renderDate,
                    },
                    {
                        name: 'Block', cell: row => row.Block.Number,
                        rendering: renderBlockLink,
                    },
                    {
                        name: 'Gas Cost', cell: row => row.Fee.SenderFee,
                        rendering: renderNumbers, headerStyle: {textAlign: 'end'},

                    },
                    {
                        name: 'Transaction', cell: row => row.Transaction.Hash,
                        rendering: renderTX,
                    },
                ]
            }
        }
    }



    const variables = {
        network: '<%= @streaming%>',
        method: '<%= @signature%>',
    }
    renderComponent('<%=@streaming_access_token %>','<%=@use_eap %>', [[MethodInformation, '#MethodInformation']], 'Method-Information_3', variables);
    const fromDate = '<%= j @from %>';
    const tillDate = '<%= j @till %>';

    renderWithTime(variables, fromDate , tillDate, function f(variables) {
        renderComponent('<%=@streaming_access_token %>','<%=@use_eap %>', [[MethodStatistic, '#MethodStatistic']], 'Method-statistic-by-date_1', variables);
        renderComponent('<%=@streaming_access_token %>','<%=@use_eap %>', [[MethodTransactions, '#MethodTransactions']], 'Method-Transactions_5', variables);
    })
</script>
