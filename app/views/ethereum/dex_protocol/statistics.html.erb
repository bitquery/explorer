<div class='row'>
  <div class='col-12 col-xl-6 mb-4'>
    <div class='card' id='TokenTrades'>
      <div class="placeholder-container">
        <div class="placeholder-row"></div>
      </div>
    </div>
  </div>
  <div class='col-12 col-xl-6 mb-4'>
    <div class='card' id='TradedCurrenciesByTime'>
      <div class="placeholder-container">
        <div class="placeholder-row"></div>
      </div>
    </div>
  </div>
</div>
<div class='row'>
  <div class='col-12 col-xl-6 mb-4'>
    <div class='card' id='FeeByTime'>
      <div class="placeholder-container">
        <div class="placeholder-row"></div>
      </div>
    </div>
  </div>
  <div class='col-12 col-xl-6 mb-4'>
    <div class='card' id='BuyerSeller'>
      <div class="placeholder-container">
        <div class="placeholder-row"></div>
      </div>
    </div>
  </div>
</div>

<script type="module">
    class TokenTrades extends TimeChartComponent {
        configuration() {
            return {
                topElement: response => response.EVM.DEXTrades,
                chainId: response => response.EVM.DEXTrades[0].ChainId,
                title: response => `${WidgetConfig.getName(response.EVM.DEXTrades[0]?.ChainId) || 'network'} Trades by Date`,
                id: 'TokenTrades',
                theme: '<%= @theme %>',
                columns: [
                    {
                        name: 'Date', cell: row => row.Block.Date
                    },
                    {
                        name: 'Trades', cell: row => +row.count
                    }
                ],
                options: {
                    height: 300,
                    theme: 'material',
                    legend: {position: 'top'},
                    colors: ['28A745'],
                }
            }
        }
    }

    class TradedCurrenciesByTime extends TimeChartComponent {
        configuration() {
            return {
                topElement: response => response.EVM.DEXTrades,
                chainId: response => response.EVM.DEXTrades[0].ChainId,
                title: response => `${WidgetConfig.getName(response.EVM.DEXTrades[0]?.ChainId) || 'network'} Trade Currencies by Date`,
                id: 'TradedCurrenciesByTime',
                theme: '<%= @theme %>',
                columns: [
                    {
                        name: 'Date', cell: row => row.Block.Date
                    },
                    {
                        name: 'Sell currency', cell: row => +row.currency_sell
                    },
                    {
                        name: 'Buy currency', cell: row => +row.currency_buy
                    }
                ],
                options: {
                    height: 300,
                    theme: 'material',
                    legend: {position: 'top'},
                }
            }
        }
    }

    class FeeByTime extends ComboChartComponent {
        configuration() {
            return {
                topElement: response => response.EVM.DEXTrades,
                chainId: response => response.EVM.DEXTrades[0].ChainId,
                title: response => `${WidgetConfig.getName(response.EVM.DEXTrades[0]?.ChainId) || 'network'} Transaction Fee by Date`,
                id: 'FeeByTime',
                theme: '<%= @theme %>',
                columns: [
                    {
                        name: 'Date', cell: row => row.Block.Date
                    },
                    {
                        name: 'Sender Fee', cell: row => +row.sender_fee
                    },
                    {
                        name: 'Burnt Fee', cell: row => +row.burnt
                    },
                    {
                        name: row => `${WidgetConfig.getBlockProducerName(row.ChainId)} Reward`,
                        cell: row => +row.reward
                    }
                ],
                options: {
                    height: 300,
                    legend: {position: 'top'},
                }
            }
        }
    }

    class BuyerSeller extends TimeChartComponent {
        configuration() {
            return {
                topElement: response => response.EVM.DEXTrades,
                chainId: response => response.EVM.DEXTrades[0].ChainId,
                title: response => `${WidgetConfig.getName(response.EVM.DEXTrades[0]?.ChainId) || 'network'} Unique Sellers and Buyers by Date`,
                id: 'BuyerSeller',
                theme: '<%= @theme %>',
                columns: [
                    {
                        name: 'Date', cell: row => row.Block.Date
                    },
                    {
                        name: 'Uniq Buyers', cell: row => +row.buyer
                    },
                    {
                        name: 'Uniq Sellers', cell: row => +row.seller
                    },
                ],
                options: {
                    height: 300,
                    theme: 'material',
                    legend: {position: 'top'},
                }
            }
        }
    }

    const variables = {
        network: '<%= @streaming%>',
        protocol: '<%= @protocol%>',
    }
    const fromDate = '<%= j @from %>';
    const tillDate = '<%= j @till %>';

    renderWithTime(variables, fromDate, tillDate, function f(variables) {
        renderComponent('<%=@streaming_access_token %>','<%=@use_eap %>', [[TokenTrades, '#TokenTrades'], [TradedCurrenciesByTime, '#TradedCurrenciesByTime'], [FeeByTime, '#FeeByTime'], [BuyerSeller, '#BuyerSeller']], 'statistic-by-dex-protocol_4', variables);
    });
</script>
