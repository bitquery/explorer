<div class='row'>
  <div class='col-12 col-lg-12 mb-4'>
    <div class='card' id='Transactions'>
      <div class="placeholder-container">
        <div class="placeholder-row"></div>
      </div>
    </div>
  </div>
</div>
<div class='row'>
  <div class='col-12 col-xl-6 mb-4'>
    <div class='card' id='TransactionsByDate'>
      <div class="placeholder-container">
        <div class="placeholder-row"></div>
      </div>
    </div>
  </div>
  <div class='col-12 col-xl-6 mb-4'>
    <div class='card' id='GasSpentByDate'>
      <div class="placeholder-container">
        <div class="placeholder-row"></div>
      </div>
    </div>
  </div>
</div>
<script type="module">
    class Transactions extends BootstrapTableComponent {
        configuration() {
            return {
                topElement: response => response.EVM.Transactions,
                chainId: response => response.EVM.Transactions[0]?.ChainId,
                id: 'Transactions',
                theme: '<%= @theme %>',
                columns: [
                    {
                        name: 'Timestamp', cell: row => row.Block.Time,
                        rendering: renderDate,
                    },
                    {
                        name: 'Block', cell: row => row.Block.Number,
                        rendering: renderBlockLink,
                    },
                    {
                        name: 'Receiver', cell: row => row.Transaction.To,
                        rendering: renderJustAddressLink,
                    },
                    {
                        name: 'Transaction hash', cell: row => row.Transaction.Hash,
                        rendering: renderTX,
                    },
                    {
                        name: 'Gas Cost', cell: row => ({amount: row.gas_cost, usd: row.gas_cost_usd}),
                        rendering: renderNumberWithUSD, headerStyle: {textAlign: 'end'},
                    },
                    {
                        name: 'Success?', cell: row => row.TransactionStatus.Success,
                        headerStyle: {width: '77px',textAlign: 'end'},
                        rendering: renderStatus
                    },
                ]
            }
        }
    }

    class TransactionsByDate extends TimeChartComponent {
        configuration() {
            return {
                topElement: response => response.EVM.Transactions,
                chainId: response => response.EVM.Transactions[0]?.ChainId,
                title: () => 'Transactions count by date',
                id: 'TransactionsByDate',
                theme: '<%= @theme %>',
                columns: [
                    {
                        name: 'Date', cell: row => row.Block.Date,
                    },
                    {
                        name: 'Transactions count', cell: row => +row.count
                    }
                ],
                options: {
                    height: 300,
                    theme: 'material',
                    colors: ['28A745'],
                    legend: {position: 'top'}
                }
            }
        }
    }

    class GasSpentByDate extends TimeChartComponent {
        configuration() {
            return {
                topElement: response => response.EVM.Transactions,
                chainId: response => response.EVM.Transactions[0]?.ChainId,
                title: () => 'Gas Spent By Date',
                id: 'GasSpentByDate',
                theme: '<%= @theme %>',
                columns: [
                    {
                        name: 'Date', cell: row => row.Block.Date,
                        rendering: renderBlockLink,
                    },
                    {
                        name: 'Gas cost', cell: row => +row.sum
                    }
                ],
                options: {
                    height: 300,
                    theme: 'material',
                    colors: ['FFC106'],
                    legend: {position: 'top'}
                }
            }
        }
    }


    const variables = {
        network: '<%= @streaming%>',
        address: '<%= @address %>',
    }
    const fromDate = '<%= j @from %>';
    const tillDate = '<%= j @till %>';

    renderWithTime(variables, fromDate, tillDate, function f(variables) {
        renderComponent('<%=@streaming_access_token %>','<%=@use_eap %>', [[Transactions, '#Transactions']], 'Transactions0_7', variables);
        renderComponent('<%=@streaming_access_token %>','<%=@use_eap %>', [[GasSpentByDate, '#GasSpentByDate'], [TransactionsByDate, '#TransactionsByDate']], 'Transactions-By-Date_9', variables);
    })

</script>
