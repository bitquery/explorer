<div class='row'>
  <div class='col-12 col-lg-12 mb-4'>
    <div id='PairLastTrades' class='card'></div>
  </div>
</div>
<script type="module">
    class PairLastTrades extends BootstrapTableComponent {
        configuration() {
            return {
                topElement: response => response.EVM.DEXTrades,
                chainId: response => response.EVM.DEXTrades[0]?.ChainId,
                title: () => "Pair last trades",
                id: 'PairLastTrades',
                columns: [
                    {
                        name: 'Timestamp', cell: row => row.Block.Time,
                        rendering: renderDate,
                    }, {
                        name: 'Block', cell: row => row.Block.Number,
                        rendering: renderBlockLink,headerStyle: {width: '100px'}
                    },
                    {
                        name: 'Quote amount', cell: row => row.Trade.Buy.Amount,
                        rendering: renderNumbers, headerStyle: {textAlign: 'end'}
                    },
                    {
                        name: 'Quote currency', cell: row => ({
                            currency: row.Trade.Buy.Currency.Symbol,
                            smartContract: row.Trade.Buy.Currency.SmartContract
                        }),
                        rendering: renderTokenLink, headerStyle: {width: '123px'},
                    },
                    {
                        name: 'Price', cell: row => row.Trade.Buy.Price,
                        rendering: renderNumbers, headerStyle: {textAlign: 'end'}
                    },
                    {
                        name: 'Base amount', cell: row => row.Trade.Sell.Amount,
                        rendering: renderNumbers, headerStyle: {textAlign: 'end'}
                    },
                    {
                        name: 'Base currency', cell: row => ({
                            currency: row.Trade.Sell.Currency.Symbol,
                            smartContract: row.Trade.Sell.Currency.SmartContract
                        }),
                        rendering: renderTokenLink, headerStyle: {width: '114px'},
                    },
                    {
                        name: 'Protocol', cell: row => ({
                            ProtocolFamily: row.Trade.Dex.ProtocolFamily,
                            ProtocolName: row.Trade.Dex.ProtocolName,
                            ProtocolVersion: row.Trade.Dex.ProtocolVersion
                        }),
                        rendering: renderDexProtocolLink, headerStyle: {width: '123px'},
                    },
                    {
                        name: 'Hash', cell: row => row.Transaction.Hash,
                        rendering: renderTX, headerStyle: {width: '123px'},
                    },
                ]
            }
        }
    }

    const variables = {
        network: '<%= @streaming%>',
        baseCurrency: '<%= @token1 %>',
        quoteCurrency: '<%= @token2 %>',
    }
    const fromDate = '<%= j @from %>';
    const tillDate = '<%= j @till %>';

    renderWithTime(variables, fromDate , tillDate, function f(variables) {
        renderComponent('<%=@streaming_access_token %>', [[PairLastTrades, '#PairLastTrades']], 'Pair-last-trades_6', variables, 'Subscription-pair-last-trades_4');
    })

</script>