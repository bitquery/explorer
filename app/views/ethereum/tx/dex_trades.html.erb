<div class='row'>
  <div class='col-12 col-lg-12 mb-4'>
    <div class='card' id='TransactionAttributes'>
      <div class="placeholder-container">
        <div class="placeholder-row"></div>
      </div>
    </div>
  </div>
</div>
<script type="module">
    class TransactionAttributes extends BootstrapTableComponent {
        configuration() {
            return {
                topElement: response => response.EVM.DEXTrades,
                chainId: response => response.EVM.DEXTrades[0]?.ChainId,
                title: () => 'Token Trades',
                id: 'TransactionAttributes',
                theme: '<%= @theme %>',
                columns: [
                    {
                        name: 'Timestamp', cell: row => row.Block.Time,
                        rendering: renderDate,
                    },
                    {
                        name: 'Block', cell: row => row.Block.Number,
                        rendering: renderBlockLink
                    },
                    {
                        name: 'Sell amount', cell: row =>({amount:row.Trade.Sell.Amount, usd:row.Trade.Sell.AmountInUSD}),
                        rendering: renderNumberWithUSD, headerStyle: {textAlign: 'end'},
                    },
                    {
                        name: 'Sell Currency', cell: row => ({
                            currency: row.Trade.Sell.Currency.Symbol,
                            smartContract: row.Trade.Sell.Currency.SmartContract
                        }),
                        rendering: renderTokenLink,
                    },
                    {
                        name: '', cell: () => '', rendering: renderSenderRecieverIcon, headerStyle: {width: '50px'},
                    },
                    {
                        name: 'Buy amount', cell: row => ({amount:row.Trade.Buy.Amount, usd:row.Trade.Buy.AmountInUSD}),
                        rendering: renderNumberWithUSD, headerStyle: {textAlign: 'end'},
                    },
                    {
                        name: 'Buy Currency', cell: row => ({
                            currency: row.Trade.Sell.Currency.Symbol,
                            smartContract: row.Trade.Sell.Currency.SmartContract
                        }),
                        rendering: renderTokenLink,
                    },
                    {
                        name: 'Protocol', cell: row => ({
                            ProtocolFamily: row.Trade.Dex.ProtocolFamily,
                            ProtocolName: row.Trade.Dex.ProtocolName,
                            ProtocolVersion: row.Trade.Dex.ProtocolVersion
                        }),
                        rendering: renderDexProtocolLink,
                    },
                    {
                        name: 'Smart Contract', cell: row => row.Trade.Dex.SmartContract,
                        rendering: renderJustAddressLink,
                    },
                ]
            }
        }
    }

    const variables = {
        network: '<%= @streaming%>',
        hash: '<%= @hash%>',
    }
    renderComponent('<%=@streaming_access_token %>','<%=@use_eap %>', [[TransactionAttributes, '#TransactionAttributes']], 'Token-Trades_10_1', variables);
</script>
