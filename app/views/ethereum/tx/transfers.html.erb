<div class='row'>
  <div class='col-12 col-lg-12 mb-4'>
    <div class='card' id='TransactionAttributes'>
      <div class="placeholder-container">
        <div class="placeholder-row"></div>
      </div>
    </div>
  </div>
</div>

<script type="module">
    class TransactionAttributes extends BootstrapTableComponent {
        configuration() {
            return {
                topElement: response => response.EVM.Transfers,
                chainId: response => response.EVM.Transfers[0]?.ChainId,
                title: response => `Top NFT Trades by Volume and Price on the ${WidgetConfig.getName(response.EVM.Transfers[0]?.ChainId) || 'network'}`,
                id: 'TransactionAttributes',
                theme: '<%= @theme %>',
                columns: [
                    {
                        name: 'Sender',
                        cell: row => row.Transaction?.From,
                        rendering: renderJustAddressLink,
                    },
                    {
                        name: '',
                        cell: row => '',
                        rendering: renderSenderRecieverIcon,
                        headerStyle: { width: '50px' },
                    },
                    {
                        name: 'Receiver',
                        cell: row => row.Transaction?.To,
                        rendering: renderJustAddressLink,
                    },
                    {
                        name: 'Amount',
                        cell: row => ({ amount: row.sum, usd: row.sum_usd }),
                        rendering: renderNumberWithUSD,
                        headerStyle: { textAlign: 'end' },
                    },
                    {
                        name: 'Gas Price',
                        cell: row => ({ amount: row.Transaction.GasPrice, usd: row.Transaction.GasPriceInUSD }),
                        rendering: renderNumberWithUSD,
                        headerStyle: { textAlign: 'end' },
                    },
                    {
                        name: 'Currency',
                        cell: row => ({
                            currency: row.Transfer.Currency.Symbol,
                            smartContract: row.Transfer.Currency.SmartContract,
                            name: row.Transfer.Currency.Name,
                        }),
                        rendering: renderTokenLink,

                    },
                    {
                        name: 'Transfer Id',
                        cell: row => ({ id: row.Transfer.Id, address: row.Transfer.Currency.SmartContract }),
                        rendering: renderIdLink,
                    },
                    {
                        name: 'Success',
                        cell: row => row.Transfer?.Success,
                        rendering: renderStatus,
                        headerStyle: { width: '100px' },
                    },
                ]
            }
        }
    }

    const variables = {
        network: '<%= @streaming %>',
        hash: '<%= @hash %>',
    }
    renderComponent('<%= @streaming_access_token %>', [[TransactionAttributes, '#TransactionAttributes']], 'Token-Transfers-in-Transaction_2', variables);
</script>
